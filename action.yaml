name: image
description: Build image and push to Docker Hub and GitHib Container Registry
author: hyperbola

inputs:
  dockerhub-username:
    description: dockerhub username
    required: false
  dockerhub-password:
    description: dockerhub API token
    required: true
  image:
    description: name of image
    required: false
  latest:
    description: push image with tag `latest`
    required: false
    default: 'false'
  github-token:
    description: github token used to push image to ghcr
    required: false
  platforms:
    description: platform list to build image
    required: false
    default: linux/amd64,linux/arm64,linux/arm/v7

runs:
  using: composite
  steps:
    - name: Get project version
      id: version
      uses: wdzeng/version@v1
      with:
        prefix: ''
    - name: Determine Dockerhub image names
      id: dockerhub-tags
      env:
        VER: ${{ steps.version.outputs.version }}
        VER_MIN: ${{ steps.version.outputs.minor }}
        VER_MAJ: ${{ steps.version.outputs.major }}
      shell: bash -e {0}
      run: |
        USR="${{ inputs.dockerhub-username }}"
        USR="${USR:-${{ github.repository_owner }}}"
        echo ::debug::username=$USR

        IMG="${{ inputs.image }}"
        REPO_NAME=${{ github.repository }}
        IMG="${IMG:-${REPO_NAME#*/}}"
        echo ::debug::image=$IMG

        TAGS="$USR/$IMG:$VER,$USR/$IMG:$VER_MIN,$USR/$IMG:$VER_MAJ"
        if [[ '${{ inputs.latest }}' == 'true' ]]; then TAGS="$TAGS,$USR/$IMG:latest"; fi
        echo ::set-output name=tags::$TAGS
    - name: Determine ghcr image names
      id: ghcr-tags
      env:
        VER: ${{ steps.version.outputs.version }}
        VER_MIN: ${{ steps.version.outputs.minor }}
        VER_MAJ: ${{ steps.version.outputs.major }}
      shell: bash -e {0}
      run: |
        USR="${{ github.repository_owner }}"
        echo ::debug::username=$USR

        IMG="${{ inputs.image }}"
        REPO_NAME=${{ github.repository }}
        IMG="${IMG:-${REPO_NAME#*/}}"
        echo ::debug::image=$IMG

        DOM='ghcr.io'

        TAGS="$DOM/$USR/$IMG:$VER,$DOM/$USR/$IMG:$VER_MIN,$DOM/$USR/$IMG:$VER_MAJ"
        if [[ '${{ inputs.latest }}' == 'true' ]]; then TAGS="$TAGS,$DOM/$USR/$IMG:latest"; fi
        echo ::set-output name=tags::$TAGS
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-password }}
    - name: Login to ghcr
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ inputs.github-token || github.token }}
    - name: Build image and push
      uses: docker/build-push-action@v3
      with:
        context: .
        push: true
        platforms: ${{ inputs.platforms }}
        tags: ${{ steps.dockerhub-tags.outputs.tags }},${{ steps.ghcr-tags.outputs.tags }}
